import { createSlice } from "@reduxjs/toolkit";
import { ProductItem } from "../../interfaces/responses/product";
import { ActionPayloadType } from "../../utils/types";

export interface CartState {
	items: {
		[key: string]: {
			title: string;
			countInCart: number
		}
	}
}

const initialState = {
	items: {}
} as CartState;

export const cartSlice = createSlice({
	name: 'cart',
	initialState,
	reducers: {
		clearCartAction: (state: CartState, action: ActionPayloadType<void>) => {
			return {
				...initialState
			}
		},

		addItemToCart: (state: CartState, action: ActionPayloadType<{ item: ProductItem }>) => {
			const { item } = action.payload;

			let countInCart = 0;

			if (state.items[item.title]) {
				countInCart = state.items[item.title].countInCart;
			}

			return {
				...state,
				items: {
					...state.items,
					[item._id]: {
						title: item.title,
						countInCart
					}
				}
			}
		},
	},
	extraReducers: {}
})

export const { clearCartAction } = cartSlice.actions

export default cartSlice.reducer