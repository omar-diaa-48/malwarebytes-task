import type { PreloadedState } from '@reduxjs/toolkit'
import { configureStore } from '@reduxjs/toolkit'
import type { RenderOptions } from '@testing-library/react'
import { render } from '@testing-library/react'
import React, { PropsWithChildren } from 'react'
import { Provider } from 'react-redux'
import { AppStore, RootState } from '../../store'
import reducer from '../../store/root'

interface ExtendedRenderOptions extends Omit<RenderOptions, 'queries'> {
	preloadedState?: PreloadedState<RootState>
	store?: AppStore
}

export function renderWithProviders(
	ui: React.ReactElement,
	{
		preloadedState = {},
		store = configureStore({ reducer, preloadedState }),
		...renderOptions
	}: ExtendedRenderOptions = {}
) {

	function Wrapper({ children }: PropsWithChildren<{}>): JSX.Element {
		return (<Provider store={store}>{children}</Provider>)
	}

	return { store, ...render(ui, { wrapper: Wrapper, ...renderOptions }) }
}