import { configureStore, PreloadedState } from '@reduxjs/toolkit'
import { rtkQueryError } from './middlewares'
import reducer from './root'
import { setupListeners } from '@reduxjs/toolkit/query'

export const store = configureStore({
	reducer,
	middleware: (getDefaultMiddleware) => getDefaultMiddleware({ serializableCheck: false }).concat(rtkQueryError)
})

// Function to be used in tests to return a store on every test case
export const setupStore = (preloadedState?: PreloadedState<RootState>) => {
	return configureStore({
		reducer,
		preloadedState
	})
}

setupListeners(store.dispatch);

export type RootState = ReturnType<typeof store.getState>;
export type AppStore = ReturnType<typeof setupStore>;
export type AppDispatch = typeof store.dispatch;