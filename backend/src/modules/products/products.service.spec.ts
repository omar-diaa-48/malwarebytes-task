import { getModelToken } from '@nestjs/mongoose';
import { Test, TestingModule } from '@nestjs/testing';
import { ProductItem } from '../../models/product-item';
import { SocketService } from '../socket/socket.service';
import { ProductsService } from './products.service';
import { ProductCategory } from '../../models/product-category';
import { mockMongoModel } from 'src/utils/mongo-model-mock';

describe('ProductsService', () => {
	let service: ProductsService;

	beforeAll(async () => {
		const module: TestingModule = await Test.createTestingModule({
			providers: [
				ProductsService,
				{
					provide: getModelToken(ProductItem.name),
					useFactory: mockMongoModel<ProductItem>
				},
				{
					provide: getModelToken(ProductCategory.name),
					useFactory: mockMongoModel<ProductCategory>
				},
				{
					provide: SocketService,
					useValue: {
						socket: {
							emit: jest.fn()
						}
					}
				}
			],
		})
			.compile();

		service = module.get<ProductsService>(ProductsService);
	});

	it('should be defined', () => {
		expect(service).toBeDefined();
	});

	it('should return the records in db', async () => {
		jest.spyOn(service, 'findAllProducts').mockReturnValue([] as any)

		const results = await service.findAllProducts();
		console.log({ results });
		expect(results).toHaveLength(0);
	});
});