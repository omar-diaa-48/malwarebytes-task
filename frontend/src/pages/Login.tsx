import { Link, useNavigate } from 'react-router-dom';
import { yupResolver } from "@hookform/resolvers/yup";
import { FormProvider, useForm } from 'react-hook-form';
import { authDefaultValues, authSchema } from "../interfaces/schemes/auth";
import { IAuthDto } from "../interfaces/dtos/auth";
import AuthForm from "../components/authentication/AuthForm";
import { loginAsyncAction } from '../store/slices/user';
import { useAppDispatch } from '../store/hooks';
import AuthPageContainer from '../components/authentication/AuthPageContainer';

const Login = () => {
	const navigate = useNavigate();
	const dispatch = useAppDispatch();

	const methods = useForm<IAuthDto>({
		mode: "onChange",
		defaultValues: authDefaultValues,
		resolver: yupResolver(authSchema)
	});

	const loginCallback = (values: IAuthDto) => {
		dispatch(loginAsyncAction(values))
			.then((data) => {
				if (data.meta.requestStatus === "fulfilled") {
					navigate('/')
				}
			})
	};

	return (
		<AuthPageContainer type='login'>
			<FormProvider {...methods}>
				<AuthForm submitAction={loginCallback} />
			</FormProvider>
		</AuthPageContainer>
	)
}

export default Login;