import { Injectable } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from "mongoose";
import { User } from 'src/models/user';
import { AuthDto } from '../auth/auth.dto';
import { BaseService } from '../base/base.service';
import * as bcrypt from "bcrypt"

@Injectable()
export class UserService extends BaseService<User>{
	constructor(
		@InjectModel('User') private userModel: Model<User>,
	) {
		super(userModel);
	}

	findUserByUserName(username: string): Promise<User> {
		return this.userModel.findOne({ username }).exec();
	}

	createUser(dto: AuthDto): Promise<User> {
		const { username, password: plainPassword } = dto;
		const hashedPassword = bcrypt.hashSync(plainPassword, 10);

		return this.userModel.create({ username, password: hashedPassword })
	}
}