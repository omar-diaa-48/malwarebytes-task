import AppRoutes from "./routes/index"
import { Flip, ToastContainer } from "react-toastify"
import 'react-toastify/dist/ReactToastify.css';
import { useEffect, useState } from "react";
import { useAppDispatch } from "./store/hooks";
import { refreshTokenAsyncAction, signoutAction } from "./store/slices/user";
import { ACCESS_TOKEN_LOCAL_STORAGE_KEY } from "./utils/constants";
import api from "./utils/api";

function App() {
	const dispatch = useAppDispatch();

	const [isTokenAdded, setIsTokenAdded] = useState<boolean>(false)

	useEffect(() => {
		const jwt_token = localStorage.getItem(ACCESS_TOKEN_LOCAL_STORAGE_KEY);

		api.defaults.headers.common["authorization"] = "Bearer " + jwt_token;
	}, [])

	useEffect(() => {
		if (isTokenAdded) {
			dispatch(refreshTokenAsyncAction())
				.then((data) => {
					if (data.meta.requestStatus === "rejected") {
						dispatch(signoutAction())
					}
				})
		}
	}, [isTokenAdded])

	return (
		<div>
			<AppRoutes />
			<ToastContainer
				position="top-center"
				autoClose={3000}
				limit={2}
				hideProgressBar
				closeOnClick
				newestOnTop
				draggable={false}
				icon={false}
				closeButton={false}
				toastClassName={() => `flex bg-white text-black my-1 justify-between px-2 py-1 mx-2 rounded-md mb-1 shadow-xl overflow-hidden cursor-pointer`}
				bodyClassName={() => `flex m-0 mx-auto text-base font-bold block px-2 py-1`}
				transition={Flip}
			/>
		</div>
	)
}

export default App
