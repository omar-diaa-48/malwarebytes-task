import { Link, useNavigate } from 'react-router-dom';
import { yupResolver } from "@hookform/resolvers/yup";
import { FormProvider, useForm } from 'react-hook-form';
import { authDefaultValues, authSchema } from "../interfaces/schemes/auth";
import { IAuthDto } from "../interfaces/dtos/auth";
import AuthForm from "../components/authentication/AuthForm";
import { loginAsyncAction } from '../store/slices/user';
import { useAppDispatch } from '../store/hooks';

const Login = () => {
	const navigate = useNavigate();
	const dispatch = useAppDispatch();

	const methods = useForm<IAuthDto>({
		mode: "onChange",
		defaultValues: authDefaultValues,
		resolver: yupResolver(authSchema)
	});

	const loginCallback = (values: IAuthDto) => {
		dispatch(loginAsyncAction(values))
			.then((data) => {
				if (data.meta.requestStatus === "fulfilled") {
					navigate('/')
				}
			})
	};

	return (
		<section className="h-screen">
			<div className="px-6 h-full text-gray-800">
				<div className="flex justify-center items-center flex-wrap h-full g-6">
					<div className="xl:w-5/12 lg:w-5/12 md:w-8/12 mb-12 md:mb-0">
						<div className="flex flex-row items-center justify-center lg:justify-start">
							<p className="mb-0 mr-4 text-lg">Login</p>
						</div>

						<div className="my-4 flex items-center before:mt-0.5 before:flex-1 before:border-t before:border-neutral-300 after:mt-0.5 after:flex-1 after:border-t after:border-neutral-300">
							<Link to="/register" className="mx-4 mb-0 text-center font-semibold">
								Or Register
							</Link>
						</div>

						<FormProvider {...methods}>
							<AuthForm submitAction={loginCallback} />
						</FormProvider>
					</div>
				</div>
			</div>
		</section>
	)
}

export default Login;