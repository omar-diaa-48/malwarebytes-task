import { useEffect, useRef, useState } from "react";
import api from "../utils/api";

export default function useApiPost<T>(url: string, method: "get" | "post", payload: any) {
	const [data, setData] = useState<T | null>(null);
	const [error, setError] = useState<string>("");
	const [loaded, setLoaded] = useState<boolean>(false);

	const controllerRef = useRef(new AbortController());

	const cancel = () => {
		controllerRef.current.abort();
	};

	useEffect(() => {
		(async () => {
			try {
				const response = await api.request({
					data: payload,
					signal: controllerRef.current.signal,
					method,
					url,
				});

				setData(response.data);
			} catch (error) {
				if (error instanceof Error) {
					setError(error.message);
				}
				else {
					setError('Invalid operation')
				}
			} finally {
				setLoaded(true);
			}
		})();

	}, []);

	return { cancel, data, error, loaded };
};