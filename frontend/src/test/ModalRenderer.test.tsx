import { describe, expect, it } from 'vitest'
import { setupStore } from '../store'
import { renderWithProviders } from '../utils/test/test-utils'
import { openModalAction } from '../store/slices/app'
import ModalRenderer from '../components/shared/ModalRenderer'
import TEST_IDS from '../utils/test/test-ids'
import { waitFor, screen } from '@testing-library/react'

describe('Modal renderer component renders current modal correctly', async () => {
	it('renders message modal', async () => {
		const store = setupStore();

		const { getByTestId } = renderWithProviders(<ModalRenderer />)

		const actionResult = store.dispatch(openModalAction({ current: 'message-modal', args: { header: 'Hello!', content: 'Hello World!' } }))

		expect(actionResult.payload.current).toEqual("message-modal");
	})

	it('renders cart modal', async () => {
		const store = setupStore({
			cart: {
				items: {
					'6443fb7443ab7130f4547491': {
						title: 'Apple iphone 11 red',
						countInCart: 1
					}
				}
			}
		});

		const { getByTestId } = renderWithProviders(<ModalRenderer />)

		const actionResult = store.dispatch(openModalAction({ current: 'cart-modal', args: {} }))

		expect(actionResult.payload.current).toEqual("cart-modal");
	})
})