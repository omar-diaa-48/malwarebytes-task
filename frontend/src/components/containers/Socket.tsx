import React, { useEffect } from 'react';
import io from 'socket.io-client';
import { useAppDispatch } from '../../store/hooks';
import { adjustProductAction } from '../../store/slices/products';
import { openModalAction } from '../../store/slices/app';

interface SocketProps { }

// Component to handle live stream from the backend
const Socket: React.FC<SocketProps> = () => {
	const dispatch = useAppDispatch();

	useEffect(() => {
		// Intialize the socket connection
		const socketConnection = io(`${import.meta.env.VITE_BACKEND_SOCKET}`, {
			transports: ['websocket']
		})

		// Listen to 'new-currencies-rates' event
		socketConnection.on('product-item-change', ({ productItem, action }) => {
			dispatch(adjustProductAction({ productItem }))
			dispatch(openModalAction({ current: 'message-modal', args: { header: 'Someone changed the data:', content: `${productItem.title} ${action} by 1` } }))
		})

		// Close socket connection on cleanup
		return () => {
			socketConnection.close();
		}
	}, [])

	return <div id='socket-container' />
}

export default Socket